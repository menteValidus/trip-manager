//
//  DetailRoutePointModels.swift
//  Tripper
//
//  Created by Denis Cherniy on 09.04.2020.
//  Copyright (c) 2020 Denis Cherniy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreLocation

enum DetailRoutePoint {
    // MARK: Use cases
    
    enum SetupUI {
        struct Request {
        }
        struct Response {
            let title: String
            let description: String
            let arrivalDate: Date
            let departureDate: Date
            let isFinished: Bool
        }
        struct ViewModel {
            let title: String
            let description: String
            let arrivalDateText: String
            let departureDateText: String
            let isFinished: Bool
        }
    }
    
    enum Dismiss {
        struct Request {
        }
        struct Response {
        }
        struct ViewModel {
        }
    }
    
    enum Edit {
        struct Request {
        }
        struct Response {
        }
        struct ViewModel {
        }
    }
    
    enum Delete {
        struct Request {
        }
        struct Response {
        }
        struct ViewModel {
        }
    }
    
    enum ToggleView {
        struct Request {
            let positionFromTheTop: CGFloat
            let maxDistanceToPan: CGFloat
        }
        struct Response {
            let screenCoverage: PopupCoverage
        }
        struct ViewModel {
            let screenCoverage: PopupCoverage
        }
    }
    
    enum LaunchNavigator {
        struct Request {
            
        }
        struct Response {
            let routePoint: RoutePoint
        }
        struct ViewModel {
            let title: String
            let coordinate: CLLocationCoordinate2D
        }
    }
    
    enum FinishMilestone {
        struct Request {
            let isFinished: Bool
        }
        struct Response {
            let routePoint: RoutePoint
        }
        struct ViewModel {
            let routePoint: RoutePoint
        }
    }
}
