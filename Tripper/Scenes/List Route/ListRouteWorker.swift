//
//  ListRouteWorker.swift
//  Tripper
//
//  Created by Denis Cherniy on 16.04.2020.
//  Copyright (c) 2020 Denis Cherniy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ListRouteWorker {
    private let routePointGateway: RoutePointDataStore = RoutePointCoreDataStore()
    
    func fetchSubroutes() -> [Subroute] {
        let fetchedRoutePoints = routePointGateway.fetchAll().sorted(by: { lhs, rhs in
            return lhs.orderNumber < rhs.orderNumber
        })
        
        var subroutes = [Subroute]()
        for index in 0..<(fetchedRoutePoints.count) {
            let routePoint = fetchedRoutePoints[index]
            let timeToStayInSeconds = Int(routePoint.departureDate.timeIntervalSince(routePoint.arrivalDate))
            let staying = Staying(title: routePoint.title, seconds: timeToStayInSeconds, description: routePoint.subtitle)
            subroutes.append(staying)
            
            let nextIndex = index + 1
            if nextIndex < fetchedRoutePoints.count {
                let nextRoutePoint = fetchedRoutePoints[nextIndex]
                let timeToNextPointInSeconds = Int(nextRoutePoint.arrivalDate.timeIntervalSince(routePoint.departureDate))
                let inRoad = InRoad(seconds: timeToNextPointInSeconds, metres: routePoint.distanceToNextPointInMeters ?? 0)
                subroutes.append(inRoad)
            }
        }
        
        return subroutes
    }
}
