//
//  CreateRoutePointRouter.swift
//  Tripper
//
//  Created by Denis Cherniy on 07.04.2020.
//  Copyright (c) 2020 Denis Cherniy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CreateRoutePointRoutingLogic {
    func routeToManageRouteMap(segue: UIStoryboardSegue?)
    func routeToManageRouteMapWithCancel(segue: UIStoryboardSegue?)
}

protocol CreateRoutePointDataPassing {
    var dataStore: CreateRoutePointDataStore? { get }
}

class CreateRoutePointRouter: NSObject, CreateRoutePointRoutingLogic, CreateRoutePointDataPassing {
    weak var viewController: CreateRoutePointViewController?
    var dataStore: CreateRoutePointDataStore?
    
    // MARK: Routing
    
    func routeToManageRouteMap(segue: UIStoryboardSegue?)
    {
      if let segue = segue {
        let destinationVC = segue.destination as! ManageRouteMapViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToManageRouteMap(source: dataStore!, destination: &destinationDS)
      } else {
        let destinationVC: ManageRouteMapViewController
        
        let viewControllers = viewController?.navigationController?.viewControllers
        if let viewControllers = viewControllers {
            let indexOfManageRouteMapVC = viewControllers.count - 2
            destinationVC = viewControllers[indexOfManageRouteMapVC] as! ManageRouteMapViewController
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            destinationVC = storyboard.instantiateViewController(withIdentifier: "ManageRouteMapViewController") as! ManageRouteMapViewController
        }
        
        var destinationDS = destinationVC.router!.dataStore!
        passDataToManageRouteMap(source: dataStore!, destination: &destinationDS)
        navigateToManageRouteMap(source: viewController!, destination: destinationVC)
      }
    }
    
    func routeToManageRouteMapWithCancel(segue: UIStoryboardSegue?) {
        let destinationVC: ManageRouteMapViewController
        
        let viewControllers = viewController?.navigationController?.viewControllers
        if let viewControllers = viewControllers {
            let indexOfManageRouteMapVC = viewControllers.count - 2
            destinationVC = viewControllers[indexOfManageRouteMapVC] as! ManageRouteMapViewController
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            destinationVC = storyboard.instantiateViewController(withIdentifier: "ManageRouteMapViewController") as! ManageRouteMapViewController
        }
        
        var destinationDS = destinationVC.router!.dataStore!
        passDataToManageRouteMapWithCancel(source: dataStore!, destination: &destinationDS)
        navigateToManageRouteMapWithCancel(source: viewController!, destination: destinationVC)
    }
    
    // MARK: Navigation
    
    func navigateToManageRouteMap(source: CreateRoutePointViewController, destination: ManageRouteMapViewController) {
        source.navigationController?.popViewController(animated: true) {
            destination.showDetail()
        }
    }
    
    func navigateToManageRouteMapWithCancel(source: CreateRoutePointViewController, destination: ManageRouteMapViewController) {
        source.navigationController?.popViewController(animated: true) {
            if let _ = destination.router?.dataStore?.selectedRoutePoint {
                destination.showDetail()
            }
        }
    }
    
    // MARK: Passing data
    
    func passDataToManageRouteMap(source: CreateRoutePointDataStore, destination: inout ManageRouteMapDataStore) {
        destination.selectedRoutePoint = source.pointToSave
    }
    
    func passDataToManageRouteMapWithCancel(source: CreateRoutePointDataStore, destination: inout ManageRouteMapDataStore) {
    }
}
