//
//  CreateRoutePointInteractor.swift
//  Tripper
//
//  Created by Denis Cherniy on 07.04.2020.
//  Copyright (c) 2020 Denis Cherniy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateRoutePointBusinessLogic {
    func formRoutePoint(request: CreateRoutePoint.FormRoutePoint.Request)
}

protocol CreateRoutePointDataStore {
    var pointToEdit: RoutePoint? { get set }
}

class CreateRoutePointInteractor: CreateRoutePointBusinessLogic, CreateRoutePointDataStore {
    var presenter: CreateRoutePointPresentationLogic?
    var worker: CreateRoutePointWorker?
    var pointToEdit: RoutePoint?
    
    // MARK: Do something
    
    func formRoutePoint(request: CreateRoutePoint.FormRoutePoint.Request) {
//        worker = CreateRoutePointWorker()
//        worker?.doSomeWork()
        
//        let annotationInfo = CreateRoutePoint.DisplayableAnnotationInfo(
//            title: pointToEdit?.title, subtitle: pointToEdit?.subtitle,
//            arrivalDate: pointToEdit?.arrivalDate, departureDate: pointToEdit?.departureDate,
//            timeToNextPointInSeconds: pointToEdit?.timeToNextPointInSeconds,
//            distanceToNextPointInMeters: pointToEdit?.distanceToNextPointInMeters)
        if let routePoint = pointToEdit {
            let response = CreateRoutePoint.FormRoutePoint.Response(routePoint: routePoint)
            presenter?.presentRoutePointForm(response: response)
        } else {
            let response = CreateRoutePoint.FormRoutePoint.Response(routePoint: createNewRoutePoint())
            presenter?.presentRoutePointForm(response: response)
        }
    }
    
    // MARK: - Helper Methods
    
    private func createNewRoutePoint() -> RoutePoint {
        let routePoint = RoutePoint(id: "test_id", orderNumber: 0)
        return routePoint
    }
}
